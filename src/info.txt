// Hauptloop: Pakete empfangen und darauf reagieren
void loop() {
  // OTA prüfen
  ArduinoOTA.handle();

  // Prüfe, ob Daten verfügbar sind
  if (Serial.available()) {
    uint8_t rxbuf[64];
    int len = Serial.readBytes(rxbuf, sizeof(rxbuf));

    // Debug: Alles, was empfangen wird, ausgeben!
    Serial.print("[DEBUG] Empfangene Bytes (len=");
    Serial.print(len);
    Serial.println("):");
    WebSerial.print("[DEBUG] Empfangene Bytes (len=");
    WebSerial.print(len);
    WebSerial.println("):");

    // Hex-Ausgabe
    for (int i = 0; i < len; i++) {
      if (rxbuf[i] < 16) Serial.print("0");
      Serial.print(rxbuf[i], HEX); Serial.print(" ");
      if (rxbuf[i] < 16) WebSerial.print("0");
      WebSerial.print(rxbuf[i], HEX); WebSerial.print(" ");
    }
    Serial.println();
    WebSerial.println();

    // ASCII-Ausgabe
    Serial.print("[DEBUG] ASCII: ");
    WebSerial.print("[DEBUG] ASCII: ");
    for (int i = 0; i < len; i++) {
      char c = (rxbuf[i] >= 32 && rxbuf[i] <= 126) ? rxbuf[i] : '.';
      Serial.print(c);
      WebSerial.print(c);
    }
    Serial.println();
    WebSerial.println();

    // AMS-Paketerkennung und Standard-Handling wie gehabt
    if (len > 4 && rxbuf[0] == 0x2F && rxbuf[1] == 0x2F) {
      Serial.println("[AMS] Paket empfangen!");
      WebSerial.println("[AMS] Paket empfangen!");
      printPacket("  Empfangen: ", rxbuf, len);

      uint8_t cmd = rxbuf[4];
      Serial.print("  CMD: 0x"); Serial.println(cmd, HEX);
      WebSerial.print("  CMD: 0x"); WebSerial.println(cmd, HEX);

      switch(cmd) {
        case 0x00: // Heartbeat
          Serial.println("  -> Heartbeat erkannt");
          WebSerial.println("  -> Heartbeat erkannt");
          sendHeartbeat();
          break;
        case 0x10: // Version-Request
          Serial.println("  -> Version-Request erkannt");
          WebSerial.println("  -> Version-Request erkannt");
          sendVersion();
          break;
        case 0x20: // Online-Detect
          Serial.println("  -> Online-Detect erkannt");
          WebSerial.println("  -> Online-Detect erkannt");
          sendOnlineDetect();
          break;
        default:
          Serial.print("  -> Unbekanntes Kommando (0x");
          WebSerial.print("  -> Unbekanntes Kommando (0x");
          Serial.print(cmd, HEX);
          Serial.println("), sende Heartbeat als Standardantwort");
          WebSerial.println("), sende Heartbeat als Standardantwort");
          sendHeartbeat();
          break;
      }
    }
  }
}


https://github.com/copilot/c/84435064-bd3e-4f7e-a280-d4285ec0cf6e